generator client {
  provider = "prisma-client-js"
}

//datasource db {
//  provider = "sqlite"
//  url      = env("DATABASE_URL")
//}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// plugin zenstackmd {
//     provider = 'zenstack-markdown'
// }

// plugin zod {
//   provider = '@core/zod'
// }

// plugin trpc {
//     provider = "@zenstackhq/trpc"
//     output   = "src/@trpc"
// }

// plugin openapi {
//     provider = "@zenstackhq/openapi"
//     output = "openapi.yaml"
//     title = "My Todo API"
//     version = "1.0.0"
// }

// miei plugins

// plugin markdown {
//     provider = './dist/zenstack/plugins/markdown'
//     title = 'My Awesome Todo App'
//     description = 'A multi-tenant Todo application built with ZenStack.'
// }

// plugin analyze {
//     provider = './dist/zenstack/plugins/analyze'
//     //title = "titolo da passare al plugin perch√® magari gli serve ... (si intende il titolo dell'app)"
//     //description = '...vedi titolo'
//     //maxDepth = 2
//     //opzione_strana_numerica=123
//     //opzione_obj = {a:1,b:2,c:'fede'}
// }

abstract model BaseEntity {

  id              Int           @id @default(autoincrement())
  uid             String?       @unique 
  name            String        @unique

  owned_by        Int? 

  created_at      DateTime      @default(now()) 
  created_by      Int?
  updated_at      DateTime      @updatedAt 
  updated_by      Int?
  deleted_at      DateTime?     
  deleted_by      Int?

  //@@allow('read, update', auth().id == owned_by)
  @@allow('all', auth().role == "ADMIN" || auth().role == "SYSTEM")
  @@allow('all', auth().id == owned_by)
  @@allow('read', true)
}

// ruoli: user,admin
model User extends BaseEntity {

  email           String?       @unique 
  phash           String?       @omit
  role            String?       
  disabled        Boolean       @default(false)

  clients         Client[]
  
  @@deny('delete', name == "system") // Nega l'eliminazione dell'utente "system"
  @@deny('update', name == "system" && auth().name != "system") // Nega l'aggiornamento dell'utente "system" se non fatto da se stesso
}

model Client extends BaseEntity {

  agent           String        
  token           String?       
  sessions        Int           @default(0)
 
  user_id         Int?         
  user            User?         @relation(fields: [user_id], references: [id])
}
 

